// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int         @id @default(autoincrement())
  email      String      @unique
  password   String
  isActive   Boolean     @default(true)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  userRoles  UserRole[]
}

model Role {
  id              Int               @id @default(autoincrement())
  name            String            @unique
  description     String?
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  userRoles       UserRole[]
  rolePermissions RolePermission[]
}

model Permission {
  id              Int               @id @default(autoincrement())
  name            String            @unique
  description     String?
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  rolePermissions RolePermission[]
}

model UserRole {
  userId     Int      @map("user_id")
  roleId     Int      @map("role_id")
  assignedAt DateTime @default(now()) @map("assigned_at")

  user User @relation(fields: [userId], references: [id])
  role Role @relation(fields: [roleId], references: [id])

  @@id([userId, roleId])
  @@index([roleId], map: "idx_user_roles_role_id")
  @@map("user_roles")
}

model RolePermission {
  roleId       Int      @map("role_id")
  permissionId Int      @map("permission_id")
  grantedAt    DateTime @default(now()) @map("granted_at")

  role       Role       @relation(fields: [roleId], references: [id])
  permission Permission @relation(fields: [permissionId], references: [id])

  @@id([roleId, permissionId])
  @@index([permissionId], map: "idx_role_permissions_permission_id")
  @@map("role_permissions")
}
